DROP TABLE IF EXISTS USERS CASCADE;
CREATE TABLE USERS (
    USER_ID INT PRIMARY KEY,
    USER_NAME VARCHAR(255),
    USER_EMAIL VARCHAR(255),
    USER_USERNAME VARCHAR(255),
    USER_IS_ADMIN BOOLEAN,
    USER_BIRTHDATE DATE
);

DROP TABLE IF EXISTS GAMES CASCADE;
CREATE TABLE GAMES (
    GAME_ID INT PRIMARY KEY,
    GAME_NAME VARCHAR(255)
);

DROP TABLE IF EXISTS TOURNAMENTS CASCADE;
CREATE TABLE TOURNAMENTS (
    TOURNAMENT_ID INT PRIMARY KEY,
    TOURNAMENT_NAME VARCHAR(255),
    TOURNAMENT_DESCRIPTION VARCHAR(255),
    TOURNAMENT_ENTRANT_LIMIT INT,
    TOURNAMENT_GAME INT,
    TOURNAMENT_LOCATION VARCHAR(255),
    TOURNAMENT_REG_END_DATE DATE,
    TOURNAMENT_START_DATE DATE,
    TOURNAMENT_THUMBNAIL VARCHAR(255),
	FOREIGN KEY (TOURNAMENT_GAME) REFERENCES GAMES(GAME_ID)
);

DROP TABLE IF EXISTS BRACKETS CASCADE;
CREATE TABLE BRACKETS (
    BRACKET_ID INT PRIMARY KEY,
    BRACKET_STYLE VARCHAR(255),
    BRACKET_ENTRANT_LIMIT INT,
    BRACKET_NEXT INT,
    BRACKET_TOURNAMENT INT,
    BRACKET_START_TIME DATE,
    BRACKET_NAME VARCHAR(255),
	FOREIGN KEY (BRACKET_TOURNAMENT) REFERENCES TOURNAMENTS(TOURNAMENT_ID)
);

DROP TABLE IF EXISTS MATCHES CASCADE;
CREATE TABLE MATCHES (
    MATCH_ID INT PRIMARY KEY,
    MATCH_ROUND INT,
    MATCH_START_TIME DATE,
    MATCH_NEXT INT,
    MATCH_BRACKET INT,
	FOREIGN KEY (MATCH_BRACKET) REFERENCES BRACKETS(BRACKET_ID)
);

DROP TABLE IF EXISTS TOURNAMENT_ENTRANT CASCADE;
CREATE TABLE TOURNAMENT_ENTRANT (
	ENTRANT_SEED INT PRIMARY KEY,
    ENTRANT_USER INT,
    ENTRANT_TOURNAMENT INT,
	FOREIGN KEY (ENTRANT_USER) REFERENCES USERS(USER_ID),
	FOREIGN KEY (ENTRANT_TOURNAMENT) REFERENCES TOURNAMENTS(TOURNAMENT_ID)
);

DROP TABLE IF EXISTS BRACKET_ENTRANT CASCADE;
CREATE TABLE BRACKET_ENTRANT (
    ENTRANT_USER INT,
    ENTRANT_BRACKET INT,
	FOREIGN KEY (ENTRANT_USER) REFERENCES USERS(USER_ID),
	FOREIGN KEY (ENTRANT_BRACKET) REFERENCES BRACKETS(BRACKET_ID)
);

DROP TABLE IF EXISTS MATCH_ENTRANT CASCADE;
CREATE TABLE MATCH_ENTRANT (
    ENTRANT_USER INT,
    ENTRANT_MATCH INT,
    ENTRANT_DQ BOOLEAN,
    ENTRANT_SCORE INT,
	FOREIGN KEY (ENTRANT_USER) REFERENCES USERS(USER_ID),
	FOREIGN KEY (ENTRANT_MATCH) REFERENCES MATCHES(MATCH_ID)
);

DROP TABLE IF EXISTS TOURNAMENT_OWNER CASCADE;
CREATE TABLE TOURNAMENT_OWNER (
    OWNER_USER INT,
    OWNER_TOURNAMENT INT,
	FOREIGN KEY (OWNER_USER) REFERENCES USERS(USER_ID),
	FOREIGN KEY (OWNER_TOURNAMENT) REFERENCES TOURNAMENTS(TOURNAMENT_ID)
);

DROP TABLE IF EXISTS RANKINGS CASCADE;
CREATE TABLE RANKINGS (
    RANKING_USER INT,
    RANKING_GAME INT,
    RANKING_SCORE INT,
	FOREIGN KEY (RANKING_USER) REFERENCES USERS(USER_ID),
	FOREIGN KEY (RANKING_GAME) REFERENCES GAMES(GAME_ID)
);